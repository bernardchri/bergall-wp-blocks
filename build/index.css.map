{"version":3,"file":"index.css","mappings":";;;AAAA,qCAAqC;AACrC;;EAEE,qBAAqB;AACvB;;AAEA,yBAAyB;AACzB;EACE,kBAAkB;AACpB;;AAEA;;;;EAIE;AACF;;EAEE,wBAAwB;EACxB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,kBAAkB;EAClB,mBAAmB;EACnB,yBAAiB;KAAjB,sBAAiB;UAAjB,iBAAiB;AACnB;;AAEA,2BAA2B;;AAE3B;EACE,0BAA0B;EAC1B,gDAAgD;;EAEhD,+BAA+B;EAC/B,gDAAgD;;EAEhD,+BAA+B;EAC/B,gDAAgD;AAClD;;AAEA;EACE,wCAAwC;EACxC,2DAA2D;;EAE3D,wCAAwC;EACxC,2DAA2D;AAC7D;;AAEA;EACE,yCAAyC;EACzC,2DAA2D;;EAE3D,4CAA4C;EAC5C,2DAA2D;;EAE3D,iDAAiD;EACjD;;GAEC;;EAED,+EAA+E;EAC/E,8DAA8D;;EAE9D,oEAAoE;EACpE,gEAAgE;AAClE","sources":["webpack:///./node_modules/splitting/dist/splitting.css"],"sourcesContent":["/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n"],"names":[],"sourceRoot":""}